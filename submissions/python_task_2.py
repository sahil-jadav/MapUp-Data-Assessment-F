# -*- coding: utf-8 -*-
"""python_task_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fpMM4oEZREDWqS6sfuYB8KjnUlR1bW0B
"""

import pandas as pd

df = pd.read_csv('dataset-3.csv')

"""Question 1: Distance Matrix Calculation"""

def calculate_distance_matrix(df):

    # Create a pivot table to calculate cumulative distances
    distance_matrix = df.pivot_table(index='id_start', columns='id_end', values='distance', aggfunc='sum', fill_value=0)

    # Make the matrix symmetric
    distance_matrix = distance_matrix + distance_matrix.T

    # Set diagonal values to 0
    distance_matrix.values[[range(len(distance_matrix))]*2] = 0

    return distance_matrix

distance_matrix = calculate_distance_matrix(df)
distance_matrix

"""Question 2: Unroll Distance Matrix"""

def unroll_distance_matrix(distance_matrix):

    # Use the stack method to unroll the distance matrix
    unrolled_df = distance_matrix.stack().reset_index()

    # Rename the columns
    unrolled_df.columns = ['id_start', 'id_end', 'distance']

    # Exclude rows where 'id_start' is equal to 'id_end'
    unrolled_df = unrolled_df[unrolled_df['id_start'] != unrolled_df['id_end']]

    return unrolled_df

unrolled_df = unroll_distance_matrix(distance_matrix)
print(unrolled_df)

"""Question 3: Finding IDs within Percentage Threshold"""



"""Question 4: Calculate Toll Rate"""

def calculate_toll_rate(df):

    # Define rate coefficients for each vehicle type
    rate_coefficients = {'moto': 0.8, 'car': 1.2, 'rv': 1.5, 'bus': 2.2, 'truck': 3.6}

    # Create new columns for each vehicle type and calculate toll rates
    for vehicle_type, rate_coefficient in rate_coefficients.items():
        df[vehicle_type] = df['distance'] * rate_coefficient

    return df

with_toll_rates = calculate_toll_rate(df)
with_toll_rates

"""Question 5: Calculate Time-Based Toll Rates"""

